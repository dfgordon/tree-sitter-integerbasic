===================
Hidden token 1
===================

10 FOR A = (LOFT) OR LEFT TO 15: REM OK
20 FOR A = LOFT OR LEFT TO 15: REM err must be handled at higher levels

---

(source_file
	(line
		(linenum)
		(statement
			(statement_for) (int_name) (op_eq_for) (binary_aexpr (open_aexpr) (int_name) (close) (op_or) (int_name)) (op_to) (integer))
		(sep_statement)
		(statement
			(statement_rem) (comment_text)))
	(line
		(linenum)
		(statement
			(statement_for) (int_name) (op_eq_for) (int_name) (op_to) (int_name))
		(sep_statement)
		(statement
			(statement_rem) (comment_text))))

===================
Hidden token 2
===================

10 IF B = A THEN 100: REM no problem for Integer

---

(source_file
	(line
		(linenum)
		(statement
			(statement_if) (binary_aexpr (int_name) (op_aeq) (int_name)) (statement_then_line) (integer))
		(sep_statement)
		(statement
			(statement_rem) (comment_text))))

===================
Disjoint tokens
===================

10 AB = 1 0 : P RI NT AB
20 IFX1THEN20
30 I F X 1 T H E N 3 0

---

(source_file
	(line
		(linenum)
		(statement
			(assignment_int (int_name) (op_eq_assign_int) (integer)))
		(sep_statement)
		(statement
			(statement_print_int) (int_name)))
	(line
		(linenum)
		(statement (statement_if) (int_name) (statement_then_line) (integer)))
	(line
		(linenum)
		(statement (statement_if) (int_name) (statement_then_line) (integer))))

===================
AT and TO
===================

100 FOR I = (A) TO B: REM OK
100 FOR I = A TO B: REM ALSO OK

---

(source_file
	(line
		(linenum)
		(statement
			(statement_for) (int_name) (op_eq_for) (open_aexpr) (int_name) (close) (op_to) (int_name))
		(sep_statement)
		(statement
			(statement_rem) (comment_text)))
	(line
		(linenum)
		(statement
			(statement_for) (int_name) (op_eq_for) (int_name) (op_to) (int_name))
		(sep_statement)
		(statement
			(statement_rem) (comment_text))))
