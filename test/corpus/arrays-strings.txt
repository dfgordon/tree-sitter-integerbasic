===================
Arrays
===================

10 DIM X(10),Y(10): DIM Z(10)
20 X(1) = Y(9): Z = X(Z(3)) + Y(Z(5))

---

(source_file
	(line
		(linenum)
		(statement
			(statement_dim_int)
			(int_name) (open_dim_int) (integer) (close)
			(sep_dim_int)
			(int_name) (open_dim_int) (integer) (close))
		(sep_statement)
		(statement
			(statement_dim_int)
			(int_name) (open_dim_int) (integer) (close)))
	(line
		(linenum)
		(statement
			(assignment_int (int_array (int_name) (open_int) (integer) (close)) (op_eq_assign_int) (int_array (int_name) (open_int) (integer) (close))))
		(sep_statement)
		(statement
			(assignment_int (int_name) (op_eq_assign_int)
				(binary_aexpr
					(int_array (int_name) (open_int) (int_array (int_name) (open_int) (integer) (close)) (close))
					(op_plus)
					(int_array (int_name) (open_int) (int_array (int_name) (open_int) (integer) (close)) (close)))))))

===================
Strings
===================

10 DIM A$(10),B$(20): LET A$ = "APPLE JUICE" : B$ = A$(1,5)
20 B$(LEN(B$)+1) = " ]["

---

(source_file
	(line
		(linenum)
		(statement (statement_dim_str)
			(str_name (dollar)) (open_dim_str) (integer) (close)
			(sep_dim_str)
			(str_name (dollar)) (open_dim_str) (integer) (close))
		(sep_statement)
		(statement (assignment_str (statement_let) (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
		(sep_statement)
		(statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (str_slice (str_name (dollar)) (open_slice) (integer) (sep_slice) (integer) (close)))))
	(line
		(linenum)
		(statement
			(assignment_str
				(str_array (str_name (dollar))
					(open_str)
					(binary_aexpr
						(fcall (fcall_lenp) (str_name (dollar)) (close))
						(op_plus)
						(integer))
					(close))
				(op_eq_assign_str)
				(string (quote) (unquote))))))

===================
Strings 2
===================

10 DIM A$(10): A$ = B$(2): L = LEN(A$)
20 IF A$ # "ABC" THEN END

---

(source_file
	(line
		(linenum)
		(statement
			(statement_dim_str) (str_name (dollar)) (open_dim_str) (integer) (close))
		(sep_statement)
		(statement
			(assignment_str
				(str_name (dollar)) (op_eq_assign_str) (str_array (str_name (dollar)) (open_str) (integer) (close))))
		(sep_statement)
		(statement
			(assignment_int
				(int_name) (op_eq_assign_int) (fcall (fcall_lenp) (str_name (dollar)) (close)))))
	(line
		(linenum)
		(statement
			(statement_if)
			(binary_aexpr (str_name (dollar)) (op_sneq) (string (quote) (unquote)))
			(statement_then)
			(statement (statement_end)))))
