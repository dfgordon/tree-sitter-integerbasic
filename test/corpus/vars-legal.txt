==========
Standlone int new
==========

10 NEW = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str new
==========

10 NEW$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int run
==========

10 RUN = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str run
==========

10 RUN$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int if
==========

10 IF = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str if
==========

10 IF$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int abs
==========

10 ABS = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str abs
==========

10 ABS$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int at
==========

10 AT = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str at
==========

10 AT$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int vlin
==========

10 VLIN = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str vlin
==========

10 VLIN$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int hlin
==========

10 HLIN = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str hlin
==========

10 HLIN$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int step
==========

10 STEP = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str step
==========

10 STEP$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int dim
==========

10 DIM = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str dim
==========

10 DIM$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int clr
==========

10 CLR = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str clr
==========

10 CLR$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int mod
==========

10 MOD = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str mod
==========

10 MOD$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int next
==========

10 NEXT = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str next
==========

10 NEXT$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int poke
==========

10 POKE = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str poke
==========

10 POKE$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int vtab
==========

10 VTAB = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str vtab
==========

10 VTAB$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int gosub
==========

10 GOSUB = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str gosub
==========

10 GOSUB$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int or
==========

10 OR = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str or
==========

10 OR$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int plot
==========

10 PLOT = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str plot
==========

10 PLOT$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int and
==========

10 AND = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str and
==========

10 AND$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int let
==========

10 LET = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str let
==========

10 LET$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int load
==========

10 LOAD = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str load
==========

10 LOAD$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int del
==========

10 DEL = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str del
==========

10 DEL$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int pdl
==========

10 PDL = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str pdl
==========

10 PDL$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int to
==========

10 TO = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str to
==========

10 TO$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int then
==========

10 THEN = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str then
==========

10 THEN$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int save
==========

10 SAVE = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str save
==========

10 SAVE$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int nodsp
==========

10 NODSP = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str nodsp
==========

10 NODSP$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int tab
==========

10 TAB = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str tab
==========

10 TAB$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int call
==========

10 CALL = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str call
==========

10 CALL$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int not
==========

10 NOT = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str not
==========

10 NOT$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int dsp
==========

10 DSP = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str dsp
==========

10 DSP$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int peek
==========

10 PEEK = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str peek
==========

10 PEEK$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int input
==========

10 INPUT = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str input
==========

10 INPUT$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int con
==========

10 CON = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str con
==========

10 CON$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int man
==========

10 MAN = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str man
==========

10 MAN$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int sgn
==========

10 SGN = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str sgn
==========

10 SGN$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int rnd
==========

10 RND = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Standlone str rnd
==========

10 RND$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Standlone int rem
==========

10 REM = 1

---

(source_file
(line (linenum) (statement (statement_rem) (comment_text) )))

==========
Standlone str rem
==========

10 REM$ = "1"

---

(source_file
(line (linenum) (statement (statement_rem) (comment_text) )))

==========
Postnumber int new
==========

10 NEW1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int run
==========

10 RUN1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int if
==========

10 IF1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int abs
==========

10 ABS1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int at
==========

10 AT1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int vlin
==========

10 VLIN1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int hlin
==========

10 HLIN1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int dim
==========

10 DIM1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int step
==========

10 STEP1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int clr
==========

10 CLR1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int mod
==========

10 MOD1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int next
==========

10 NEXT1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int poke
==========

10 POKE1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int vtab
==========

10 VTAB1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int gosub
==========

10 GOSUB1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int or
==========

10 OR1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int plot
==========

10 PLOT1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int print
==========

10 PRINT1 = 1

---

(source_file
(line (linenum) (statement (statement_print_int) (binary_aexpr (integer) (op_aeq) (integer)) )))

==========
Postnumber int and
==========

10 AND1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int let
==========

10 LET1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int load
==========

10 LOAD1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int del
==========

10 DEL1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int pdl
==========

10 PDL1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int to
==========

10 TO1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int goto
==========

10 GOTO1 = 1

---

(source_file
(line (linenum) (statement (statement_goto) (binary_aexpr (integer) (op_aeq) (integer)) )))

==========
Postnumber int then
==========

10 THEN1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int save
==========

10 SAVE1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int nodsp
==========

10 NODSP1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int tab
==========

10 TAB1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int call
==========

10 CALL1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int not
==========

10 NOT1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int peek
==========

10 PEEK1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int input
==========

10 INPUT1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int dsp
==========

10 DSP1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int con
==========

10 CON1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int man
==========

10 MAN1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int sgn
==========

10 SGN1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int rnd
==========

10 RND1 = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postnumber int rem
==========

10 REM1 = 1

---

(source_file
(line (linenum) (statement (statement_rem) (comment_text) )))

==========
Postnumber str new
==========

10 NEW1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str run
==========

10 RUN1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str if
==========

10 IF1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str abs
==========

10 ABS1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str at
==========

10 AT1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str vlin
==========

10 VLIN1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str hlin
==========

10 HLIN1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str step
==========

10 STEP1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str dim
==========

10 DIM1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str clr
==========

10 CLR1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str mod
==========

10 MOD1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str next
==========

10 NEXT1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str poke
==========

10 POKE1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str vtab
==========

10 VTAB1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str gosub
==========

10 GOSUB1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str or
==========

10 OR1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str plot
==========

10 PLOT1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str and
==========

10 AND1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str let
==========

10 LET1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str load
==========

10 LOAD1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str del
==========

10 DEL1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str pdl
==========

10 PDL1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str to
==========

10 TO1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str then
==========

10 THEN1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str save
==========

10 SAVE1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str nodsp
==========

10 NODSP1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str tab
==========

10 TAB1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str call
==========

10 CALL1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str not
==========

10 NOT1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str dsp
==========

10 DSP1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str peek
==========

10 PEEK1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str input
==========

10 INPUT1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str con
==========

10 CON1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str man
==========

10 MAN1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str sgn
==========

10 SGN1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str rnd
==========

10 RND1$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postnumber str rem
==========

10 REM1$ = "1"

---

(source_file
(line (linenum) (statement (statement_rem) (comment_text) )))

==========
Postalpha int new
==========

10 NEWA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str new
==========

10 NEWA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int run
==========

10 RUNA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str run
==========

10 RUNA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int if
==========

10 IFA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str if
==========

10 IFA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int abs
==========

10 ABSA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str abs
==========

10 ABSA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int at
==========

10 ATA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str at
==========

10 ATA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int vlin
==========

10 VLINA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str vlin
==========

10 VLINA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int hlin
==========

10 HLINA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str hlin
==========

10 HLINA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int step
==========

10 STEPA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str step
==========

10 STEPA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int dim
==========

10 DIMA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str dim
==========

10 DIMA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int clr
==========

10 CLRA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str clr
==========

10 CLRA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int mod
==========

10 MODA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str mod
==========

10 MODA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int poke
==========

10 POKEA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str poke
==========

10 POKEA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int vtab
==========

10 VTABA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str vtab
==========

10 VTABA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int gosub
==========

10 GOSUBA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str gosub
==========

10 GOSUBA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int or
==========

10 ORA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str or
==========

10 ORA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int plot
==========

10 PLOTA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str plot
==========

10 PLOTA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int print
==========

10 PRINTA = 1

---

(source_file
(line (linenum) (statement (statement_print_int) (binary_aexpr (int_name) (op_aeq) (integer)) )))

==========
Postalpha str print
==========

10 PRINTA$ = "1"

---

(source_file
(line (linenum) (statement (statement_print_int) (binary_aexpr (str_name (dollar)) (op_seq) (string (quote) (unquote))) )))

==========
Postalpha int and
==========

10 ANDA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str and
==========

10 ANDA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int let
==========

10 LETA = 1

---

(source_file
(line (linenum) (statement (assignment_int (statement_let) (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str let
==========

10 LETA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (statement_let) (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int load
==========

10 LOADA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str load
==========

10 LOADA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int del
==========

10 DELA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str del
==========

10 DELA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int pdl
==========

10 PDLA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str pdl
==========

10 PDLA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int to
==========

10 TOA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str to
==========

10 TOA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int goto
==========

10 GOTOA = 1

---

(source_file
(line (linenum) (statement (statement_goto) (binary_aexpr (int_name) (op_aeq) (integer)) )))

==========
Postalpha str goto
==========

10 GOTOA$ = "1"

---

(source_file
(line (linenum) (statement (statement_goto) (binary_aexpr (str_name (dollar)) (op_seq) (string (quote) (unquote))) )))

==========
Postalpha int then
==========

10 THENA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str then
==========

10 THENA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int save
==========

10 SAVEA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str save
==========

10 SAVEA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int tab
==========

10 TABA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str tab
==========

10 TABA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int call
==========

10 CALLA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str call
==========

10 CALLA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int not
==========

10 NOTA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str not
==========

10 NOTA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int peek
==========

10 PEEKA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str peek
==========

10 PEEKA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int con
==========

10 CONA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str con
==========

10 CONA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int man
==========

10 MANA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str man
==========

10 MANA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int sgn
==========

10 SGNA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str sgn
==========

10 SGNA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int rnd
==========

10 RNDA = 1

---

(source_file
(line (linenum) (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Postalpha str rnd
==========

10 RNDA$ = "1"

---

(source_file
(line (linenum) (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Postalpha int rem
==========

10 REMA = 1

---

(source_file
(line (linenum) (statement (statement_rem) (comment_text) )))

==========
Postalpha str rem
==========

10 REMA$ = "1"

---

(source_file
(line (linenum) (statement (statement_rem) (comment_text) )))

==========
Within int new
==========

10 ZNEWZ = 1: ZNEW = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str new
==========

10 ZNEWZ$ = "1": ZNEW$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int run
==========

10 ZRUNZ = 1: ZRUN = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str run
==========

10 ZRUNZ$ = "1": ZRUN$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int if
==========

10 ZIFZ = 1: ZIF = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str if
==========

10 ZIFZ$ = "1": ZIF$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int abs
==========

10 ZABSZ = 1: ZABS = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str abs
==========

10 ZABSZ$ = "1": ZABS$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int vlin
==========

10 ZVLINZ = 1: ZVLIN = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str vlin
==========

10 ZVLINZ$ = "1": ZVLIN$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int hlin
==========

10 ZHLINZ = 1: ZHLIN = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str hlin
==========

10 ZHLINZ$ = "1": ZHLIN$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int dim
==========

10 ZDIMZ = 1: ZDIM = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str dim
==========

10 ZDIMZ$ = "1": ZDIM$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int clr
==========

10 ZCLRZ = 1: ZCLR = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str clr
==========

10 ZCLRZ$ = "1": ZCLR$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int gr
==========

10 ZGRZ = 1: ZGR = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str gr
==========

10 ZGRZ$ = "1": ZGR$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int next
==========

10 ZNEXTZ = 1: ZNEXT = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str next
==========

10 ZNEXTZ$ = "1": ZNEXT$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int poke
==========

10 ZPOKEZ = 1: ZPOKE = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str poke
==========

10 ZPOKEZ$ = "1": ZPOKE$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int vtab
==========

10 ZVTABZ = 1: ZVTAB = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str vtab
==========

10 ZVTABZ$ = "1": ZVTAB$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int gosub
==========

10 ZGOSUBZ = 1: ZGOSUB = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str gosub
==========

10 ZGOSUBZ$ = "1": ZGOSUB$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int plot
==========

10 ZPLOTZ = 1: ZPLOT = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str plot
==========

10 ZPLOTZ$ = "1": ZPLOT$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int print
==========

10 ZPRINTZ = 1: ZPRINT = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str print
==========

10 ZPRINTZ$ = "1": ZPRINT$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int list
==========

10 ZLISTZ = 1: ZLIST = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str list
==========

10 ZLISTZ$ = "1": ZLIST$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int let
==========

10 ZLETZ = 1: ZLET = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str let
==========

10 ZLETZ$ = "1": ZLET$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int load
==========

10 ZLOADZ = 1: ZLOAD = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str load
==========

10 ZLOADZ$ = "1": ZLOAD$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int del
==========

10 ZDELZ = 1: ZDEL = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str del
==========

10 ZDELZ$ = "1": ZDEL$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int pdl
==========

10 ZPDLZ = 1: ZPDL = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str pdl
==========

10 ZPDLZ$ = "1": ZPDL$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int return
==========

10 ZRETURNZ = 1: ZRETURN = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str return
==========

10 ZRETURNZ$ = "1": ZRETURN$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int save
==========

10 ZSAVEZ = 1: ZSAVE = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str save
==========

10 ZSAVEZ$ = "1": ZSAVE$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int nodsp
==========

10 ZNODSPZ = 1: ZNODSP = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str nodsp
==========

10 ZNODSPZ$ = "1": ZNODSP$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int tab
==========

10 ZTABZ = 1: ZTAB = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str tab
==========

10 ZTABZ$ = "1": ZTAB$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int call
==========

10 ZCALLZ = 1: ZCALL = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str call
==========

10 ZCALLZ$ = "1": ZCALL$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int end
==========

10 ZENDZ = 1: ZEND = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str end
==========

10 ZENDZ$ = "1": ZEND$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int not
==========

10 ZNOTZ = 1: ZNOT = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str not
==========

10 ZNOTZ$ = "1": ZNOT$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int peek
==========

10 ZPEEKZ = 1: ZPEEK = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str peek
==========

10 ZPEEKZ$ = "1": ZPEEK$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int text
==========

10 ZTEXTZ = 1: ZTEXT = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str text
==========

10 ZTEXTZ$ = "1": ZTEXT$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int input
==========

10 ZINPUTZ = 1: ZINPUT = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str input
==========

10 ZINPUTZ$ = "1": ZINPUT$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int dsp
==========

10 ZDSPZ = 1: ZDSP = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str dsp
==========

10 ZDSPZ$ = "1": ZDSP$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int con
==========

10 ZCONZ = 1: ZCON = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str con
==========

10 ZCONZ$ = "1": ZCON$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int pop
==========

10 ZPOPZ = 1: ZPOP = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str pop
==========

10 ZPOPZ$ = "1": ZPOP$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int trace
==========

10 ZTRACEZ = 1: ZTRACE = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str trace
==========

10 ZTRACEZ$ = "1": ZTRACE$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int man
==========

10 ZMANZ = 1: ZMAN = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str man
==========

10 ZMANZ$ = "1": ZMAN$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int sgn
==========

10 ZSGNZ = 1: ZSGN = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str sgn
==========

10 ZSGNZ$ = "1": ZSGN$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int rnd
==========

10 ZRNDZ = 1: ZRND = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str rnd
==========

10 ZRNDZ$ = "1": ZRND$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int rem
==========

10 ZREMZ = 1: ZREM = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str rem
==========

10 ZREMZ$ = "1": ZREM$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

==========
Within int notrace
==========

10 ZNOTRACEZ = 1: ZNOTRACE = 1

---

(source_file
(line (linenum)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))
    (sep_statement)
    (statement (assignment_int (int_name) (op_eq_assign_int) (integer)))))

==========
Within str notrace
==========

10 ZNOTRACEZ$ = "1": ZNOTRACE$ = "1"

---

(source_file
(line (linenum)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))
    (sep_statement)
    (statement (assignment_str (str_name (dollar)) (op_eq_assign_str) (string (quote) (unquote))))))

